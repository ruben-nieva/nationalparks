{
   "kind": "Template",
   "apiVersion": "v1",
   "metadata": {
      "name": "nationalparks-wildfly",
      "annotations": {
         "iconClass": "icon-jboss",
         "description": "Application template for MLB Parks application on WildFly & MongoDB built using STI"
      }
   },
   "labels": {
      "application": "nationalparks",
      "createdBy": "template-nationalparks-wildfly"
   },
   "parameters": [
      {
         "description": "The name for the application.",
         "name": "APPLICATION_NAME",
         "value": "nationalparks"
      },
      {
         "description": "Custom hostname for service routes.  Leave blank for default hostname, e.g.: <application-name>.<project>.<default-domain-suffix>",
         "name": "APPLICATION_HOSTNAME"
      },
      {
         "description": "Git source URI for application",
         "name": "GIT_URI",
         "value": "https://github.com/ruben-nieva/nationalparks.git"
      },
      {
         "description": "Git branch/tag reference",
         "name": "GIT_REF",
         "value": "master"
      },
      {
         "description": "Maven mirror url. If nexus is deployed locally, use nexus url (e.g. http://nexus.ci.apps.10.2.2.2.xip.io/content/groups/public/)",
         "name": "MAVEN_MIRROR_URL",
         "displayName": "Maven mirror url",
         "required": false
      },
      {
         "description": "Github trigger secret",
         "name": "GITHUB_TRIGGER_SECRET",
         "from": "[a-zA-Z0-9]{8}",
         "generate": "expression"
      },
      {
         "description": "Generic build trigger secret",
         "name": "GENERIC_TRIGGER_SECRET",
         "from": "[a-zA-Z0-9]{8}",
         "generate": "expression"
      }
   ],
   "objects": [
      {
         "kind": "BuildConfig",
         "apiVersion": "v1",
         "metadata": {
            "name": "${APPLICATION_NAME}"
         },
         "spec": {
            "triggers": [
               {
                  "type": "Generic",
                  "generic": {
                     "secret": "${GENERIC_TRIGGER_SECRET}"
                  }
               },
               {
                  "type": "GitHub",
                  "github": {
                     "secret": "${GITHUB_TRIGGER_SECRET}"
                  }
               },
               {
                  "type": "ImageChange",
                  "imageChange": {}
               }
            ],
            "source": {
               "type": "Git",
               "git": {
                  "uri": "${GIT_URI}",
                  "ref": "${GIT_REF}"
               }
            },
            "strategy": {
               "type": "Source",
               "sourceStrategy": {
                  "from": {
                     "kind": "ImageStreamTag",
                     "namespace": "openshift",
                     "name": "wildfly:latest"
                  },
                  "env": [
                     {
                        "name": "MAVEN_MIRROR_URL",
                        "value": "${MAVEN_MIRROR_URL}"
                     }
                  ]
               }
            },
            "output": {
               "to": {
                  "kind": "ImageStreamTag",
                  "name": "${APPLICATION_NAME}:latest"
               }
            }
         }
      },
      {
         "kind": "ImageStream",
         "apiVersion": "v1",
         "metadata": {
            "name": "${APPLICATION_NAME}"
         },
         "spec": {
            "dockerImageRepository": "",
            "tags": [
               {
                  "name": "latest"
               }
            ]
         }
      },
      {
         "kind": "DeploymentConfig",
         "apiVersion": "v1",
         "metadata": {
            "name": "${APPLICATION_NAME}",
            "labels": {
               "deploymentConfig": "${APPLICATION_NAME}"
            }
         },
         "spec": {
            "strategy": {
               "type": "Recreate"
            },
            "triggers": [
               {
                  "type": "ImageChange",
                  "imageChangeParams": {
                     "automatic": true,
                     "containerNames": [
                        "${APPLICATION_NAME}"
                     ],
                     "from": {
                        "kind": "ImageStreamTag",
                        "name": "${APPLICATION_NAME}:latest"
                     }
                  }
               },
               {
                  "type": "ConfigChange"
               }
            ],
            "replicas": 1,
            "selector": {
               "deploymentConfig": "${APPLICATION_NAME}"
            },
            "template": {
               "metadata": {
                  "labels": {
                     "deploymentConfig": "${APPLICATION_NAME}"
                  }
               },
               "spec": {
                  "containers": [
                     {
                        "name": "${APPLICATION_NAME}",
                        "image": "${APPLICATION_NAME}",
                        "ports": [
                           {
                              "name": "http",
                              "containerPort": 8080,
                              "protocol": "TCP"
                           }
                        ],
                        "readinessProbe": {
                           "httpGet": {
                              "path": "/",
                              "port": 8080
                           }
                        },
                        "env": [
                           {
                              "name": "MONGODB_USER",
                              "value": "${MONGODB_USER}"
                           },
                           {
                              "name": "MONGODB_PASSWORD",
                              "value": "${MONGODB_PASSWORD}"
                           },
                           {
                              "name": "MONGODB_DATABASE",
                              "value": "${MONGODB_DATABASE}"
                           },
                           {
                              "name": "MONGODB_ADMIN_PASSWORD",
                              "value": "${MONGODB_ADMIN_PASSWORD}"
                           }
                        ],
                        "volumeMounts": [
                           {
                              "name": "mongo-config-volume",
                              "mountPath": "/etc/mongo/"
                           }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "imagePullPolicy": "Always",
                        "securityContext": {
                           "capabilities": {},
                           "privileged": false
                        }
                     }
                  ],
                  "volumes": [
                     {
                        "name": "mongo-config-volume",
                        "configMap": {
                           "name": "mongo-config"
                        }
                     }
                  ],
                  "restartPolicy": "Always",
                  "dnsPolicy": "ClusterFirst"
               }
            }
         }
      },
      {
         "kind": "Route",
         "apiVersion": "v1",
         "metadata": {
            "name": "${APPLICATION_NAME}",
            "annotations": {
               "description": "Route for application's http service"
            }
         },
         "spec": {
            "host": "${APPLICATION_HOSTNAME}",
            "to": {
               "kind": "Service",
               "name": "${APPLICATION_NAME}"
            }
         }
      },
      {
         "kind": "Service",
         "apiVersion": "v1",
         "metadata": {
            "name": "${APPLICATION_NAME}",
            "annotations": {
               "description": "The web server's http port"
            }
         },
         "spec": {
            "ports": [
               {
                  "protocol": "TCP",
                  "port": 8080,
                  "targetPort": 8080
               }
            ],
            "selector": {
               "deploymentConfig": "${APPLICATION_NAME}"
            }
         }
      }
   ]
}
